{"remainingRequest":"/Users/shiang/Desktop/202203_web/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/shiang/Desktop/202203_web/web/src/App.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/shiang/Desktop/202203_web/web/src/App.vue","mtime":1599627495550},{"path":"/Users/shiang/Desktop/202203_web/web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/shiang/Desktop/202203_web/web/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/shiang/Desktop/202203_web/web/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/shiang/Desktop/202203_web/web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/shiang/Desktop/202203_web/web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport data from \"@/utilities/data.js\";\nimport LeftNav from \"@/components/index/LeftNav\";\nimport TopBar from \"@/components/index/TopBar\";\nimport MsgDialog from \"@/components/index/MsgDialog\";\n// import OpenDialog from \"@/components/OpenDialog\";\nexport default {\n  components: {\n    LeftNav,\n    TopBar,\n    MsgDialog\n  },\n  data() {\n    return {\n      isShowNav: false,\n      isMaskshow: false,\n      isRouterAlive: true,\n      loading: 1,\n      loadNum: 0,\n      loadpercent: 0\n    };\n  },\n  created() {\n    this.$bus.on(\"isShowNav\", val => {\n      this.isShowNav = val;\n    });\n  },\n  mounted() {\n    this.onLoading();\n  },\n  methods: {\n    onLoading() {\n      let obj = data;\n      let list = JSON.parse(JSON.stringify(obj));\n      let picarr = [];\n      let href = \"\";\n      let getArr = arr => {\n        let img = [];\n        for (let i = 0, l = arr.length; i < l; i++) {\n          img.push(setUrl(arr[i].url));\n        }\n      };\n      let setUrl = url => {\n        let img = \"\";\n        if (url.indexOf(\"http\") > -1) {\n          img = url;\n        } else {\n          img = href + this.baseurl + url;\n        }\n        return img;\n      };\n      for (let i in list) {\n        if (list.hasOwnProperty(i)) {\n          let obj = Object.prototype.toString.call(list[i]);\n\n          if (obj === \"[object Array]\") {\n            for (let j = 0, l = list[i].length; j < l; j++) {\n              let imgurl = list[i][j];\n              if (imgurl.url) {\n                picarr.push(setUrl(imgurl.url));\n              }\n            }\n          } else {\n            if (list[i].face) {\n              picarr = picarr.concat(getArr(list[i].face));\n            }\n          }\n        }\n      }\n      this.laodFull = picarr.length;\n      this.getLoadImg(picarr);\n      return picarr;\n    },\n    getLoadImg(arr) {\n      let onloadarr = [];\n      // console.log(arr)\n\n      let backFun = () => {\n        this.loadNum += 1;\n        this.loadpercent = (this.loadNum / arr.length) * 100;\n        // console.log(this.loadNum, arr.length, this.loadNum / arr.length, 1 / 2)\n        if (this.loadNum === arr.length - 1) {\n          // console.log('11111')\n\n          this.mytime = setTimeout(() => {\n            clearTimeout(this.mytime);\n            this.loading = 0;\n          }, 500);\n        }\n      };\n\n      for (let i = 0; i < arr.length; i++) {\n        onloadarr[i] = new Image();\n        onloadarr[i].onload = () => {\n          // console.log(i, arr[i])\n          backFun();\n        };\n        onloadarr[i].src = arr[i];\n      }\n    }\n  }\n  // updated() {\n  //   window.scroll(0, 0);\n  // }\n};\n",null]}